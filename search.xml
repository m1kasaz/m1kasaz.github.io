<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java多线程中wait/notify机制</title>
      <link href="/2025/06/24/2025.6.24/"/>
      <url>/2025/06/24/2025.6.24/</url>
      
        <content type="html"><![CDATA[<h3 id="wait-notify机制">wait/notify机制</h3><ul><li>wait():在获得对象锁后主动进入等待状态让出对象锁。</li><li>notify():同样时通知正在等待的其他线程，主动让出对象锁，但是，与 wait() 方法不同，执行 notify() 后，不会立即释放对象锁，而需要执行完 synchronize 的代码块或方法才会释放锁，所以接收通知的线程也不会立即获得锁，也需要等待执行 notify() 方法的线程释放锁后再获取锁。</li></ul><h3 id="应用">应用</h3><div class="note info simple"><p>问题：写两个线程打印1-100，一个线程打印奇数，一个线程打印偶数</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Printer</span> &#123;</span><br><span class="line">    <span class="comment">//打印的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> max;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义对象锁</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Object</span> <span class="variable">lock</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printEven</span><span class="params">()</span>&#123;</span><br><span class="line">        print(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">printOdd</span><span class="params">()</span>&#123;</span><br><span class="line">        print(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Printer</span><span class="params">(<span class="type">int</span> max)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.max = max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(<span class="type">boolean</span> isOdd)</span>&#123;</span><br><span class="line">        <span class="comment">//每个线程各执行50次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= max; i+=<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">//加锁</span></span><br><span class="line">            <span class="keyword">synchronized</span>(lock)&#123;</span><br><span class="line">                <span class="comment">//判断当前是轮到哪个线程执行</span></span><br><span class="line">                <span class="keyword">while</span> (isOdd == (count%<span class="number">2</span>==<span class="number">0</span>))&#123;</span><br><span class="line">                    <span class="comment">//若不是当前线程执行时机则让出锁</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        lock.wait();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        Thread.currentThread().interrupt();</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//打印</span></span><br><span class="line">                System.out.println(Thread.currentThread().getName()+<span class="string">&quot;: &quot;</span>+count++);</span><br><span class="line">                <span class="comment">//释放锁</span></span><br><span class="line">                lock.notify();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Printer</span> <span class="variable">printer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Printer</span>(<span class="number">100</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="type">Thread</span> <span class="variable">odd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(printer::printOdd, <span class="string">&quot;Odd&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">even</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(printer::printEven, <span class="string">&quot;Even&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        odd.start();</span><br><span class="line">        even.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>watch监听函数</title>
      <link href="/2025/06/24/2025.6.23/"/>
      <url>/2025/06/24/2025.6.23/</url>
      
        <content type="html"><![CDATA[<h3 id="属性监听">属性监听</h3><ul><li><p>源对象是一个ref的属性值及其衍生式</p></li><li><p>当监听的属性值发生变化时会触发监听函数执行响应的操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> x = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> y = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单个 ref</span></span><br><span class="line"><span class="title function_">watch</span>(x, <span class="function">(<span class="params">newX</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`x is <span class="subst">$&#123;newX&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// getter 函数</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> x.<span class="property">value</span> + y.<span class="property">value</span>,</span><br><span class="line">  <span class="function">(<span class="params">sum</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`sum of x + y is: <span class="subst">$&#123;sum&#125;</span>`</span>)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多个来源组成的数组</span></span><br><span class="line"><span class="title function_">watch</span>([x, <span class="function">() =&gt;</span> y.<span class="property">value</span>], <span class="function">(<span class="params">[newX, newY]</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`x is <span class="subst">$&#123;newX&#125;</span> and y is <span class="subst">$&#123;newY&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="对象监听">对象监听</h3><h4 id="1-对象的全部属性">1.对象的全部属性</h4><ul><li>源对象是一个ref的对象值</li><li>浅层监听：对ref对象内的属性进行更改时不会触发监听</li><li>深层监听：当ref对象内任一属性发生更改时都会触发，但是性能开销更大</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="title function_">watch</span>(user, <span class="function">(<span class="params">newVal, oldVal</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//行为</span></span><br><span class="line">&#125;,(<span class="attr">deep</span>:<span class="literal">true</span>)<span class="comment">//开启深度监听</span></span><br></pre></td></tr></table></figure><h4 id="2-对象的单个属性">2.对象的单个属性</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> searchEmp = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">date</span>: [],</span><br><span class="line">  <span class="attr">begin</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="attr">end</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//侦听searchEmp中的date属性</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="comment">//这里需要用一个对象属性的getter方法，禁止属性值直接传入</span></span><br><span class="line">  <span class="function">() =&gt;</span> searchEmp.<span class="property">value</span>.<span class="property">date</span>,</span><br><span class="line">  <span class="function">(<span class="params">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">if</span>(newValue.<span class="property">length</span> == <span class="number">2</span>)&#123;</span><br><span class="line">      searchEmp.<span class="property">value</span>.<span class="property">begin</span> = newValue[<span class="number">0</span>]</span><br><span class="line">      searchEmp.<span class="property">value</span>.<span class="property">end</span> = newValue[<span class="number">1</span>]</span><br><span class="line">     &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      searchEmp.<span class="property">value</span>.<span class="property">begin</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      searchEmp.<span class="property">value</span>.<span class="property">end</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><a href="https://cn.vuejs.org/guide/essentials/watchers">官方文档</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VueRouter</title>
      <link href="/2025/06/22/2025.6.22/"/>
      <url>/2025/06/22/2025.6.22/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>VueRouter（以下称为route）是Vue提供的路由组件，主要由3方面构成：</p><ul><li><p>router-link：请求链接组件，浏览器会解析成a标签</p></li><li><p>router-view：动态视图组件，用来渲染展示与路由路径对应的组件</p></li><li><p>路由表router如下图</p><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250622181125012.png" alt="image-20250622181125012"></p></li></ul><p>下面我们从三个角度了解route</p><hr><h3 id="router-link">router-link</h3><p>该标签通常添加在button，menu等标签外，表示点击该组件，启动路由跳到下一个页面，例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;&quot;</span>&gt;</span> //添加下一跳的地址</span><br><span class="line">    <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;/index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Promotion</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span> 首页</span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br></pre></td></tr></table></figure><p>element的menu组件中集成了该功能上述代码等价于</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-menu</span> <span class="attr">router</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-menu-item</span> <span class="attr">index</span>=<span class="string">&quot;/index&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-icon</span>&gt;</span><span class="tag">&lt;<span class="name">Promotion</span> /&gt;</span><span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span> 首页</span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-menu-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在顶级菜单栏中添加&quot;router&quot;即可，会自动根据index中的内容寻找下一跳的地址</p><hr><h3 id="router-view">router-view</h3><p><strong>动态渲染组件</strong>，将下一跳的组件在标签位置渲染出来，通常加在具有container功能的标签内。例如</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">//下一跳的组件将加载在<span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;/<span class="name">el_main</span>&gt;</span>的内容里</span><br></pre></td></tr></table></figure><hr><h3 id="路由表router">路由表router</h3><p>决定该路径下，访问的组件是什么。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//导入IndexView组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">IndexView</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/index/index.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line"><span class="comment">//配置路由信息</span></span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&#x27;/index&#x27;</span>, <span class="attr">component</span>: <span class="title class_">IndexView</span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><hr><p>进阶用法:</p><ul><li><a href="https://router.vuejs.org/zh/guide/essentials/nested-routes.html">嵌套路由</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二级域名及vercel绑定</title>
      <link href="/2025/06/19/2025.6.19/"/>
      <url>/2025/06/19/2025.6.19/</url>
      
        <content type="html"><![CDATA[<h3 id="前言">前言</h3><p>这里默认大家已经拥有自己的域名，创建二级域名主要目的是：<br>在你主域名已经绑定的前提下，不想重新再买一个域名进行别的网站的绑定</p><hr><h3 id="创建二级域名">创建二级域名</h3><p>打开你购买域名的官网（这里以<a href="https://www.aliyun.com">阿里云</a>为例）</p><div class="note info simple"><p>搜索域名控制台，进入域名管理</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620173247119.png" alt="image-20250620173247119"></p><div class="note info simple"><p>进入<strong>域名列表</strong>，点击解析</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620173415215.png" alt="image-20250620173415215"></p><div class="note info simple"><p>点击<strong>添加域名</strong>，填入域名的名字<strong>前缀不能是大写</strong></p></div><h6 id="image-20250620173742135"><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620173742135.png" alt="image-20250620173742135"></h6><div class="note info simple"><p>点击<strong>TXT授权校验</strong>，保存TXT记录</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620173948316.png" alt="image-20250620173948316"></p><div class="note info simple"><p>进入主域名的<strong>解析设置</strong>，<strong>这里一定得是主域名！</strong></p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620174108097.png" alt="image-20250620174108097"></p><div class="note info simple"><p><strong>添加记录</strong>，将记录填入，<strong>记录类型要选择TXT</strong></p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620174343636.png" alt="image-20250620174343636"></p><div class="note info simple"><p>返回进行TXT检测</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620174610973.png" alt="image-20250620174610973"></p><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620174649423.png" alt="image-20250620174649423"></p><h3 id="将域名解析至vercel">将域名解析至vercel</h3><div class="note info simple"><p>这里假设你已经在vercel上面创建好项目，准备绑定域名</p></div><ul><li><p>进入项目，点击<strong>Domains</strong></p><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620181547727.png" alt="image-20250620181547727"></p></li><li><p>点击<strong>add domains</strong>，输入你的域名并保存</p><div class="note warning simple"><p>你会看到Invalid Configuration的警告，这是因为你还没有配置</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620181638318.png" alt="image-20250620181638318"></p></li><li><p>点击进入解析页面，将记录值保存下来</p><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620181713838.png" alt="image-20250620181713838"></p></li><li><p>回到阿里云域名列表，对你的二级域名解析设置</p><div class="note warning simple"><p>是刚刚创建的二级域名!</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620181759564.png" alt=""></p></li><li><p>添加两条解析记录</p><div class="note warning simple"><p>第一条基本是一样的，记录值为76.76.21.21</p><p>第二条就要看你的记录填了</p></div><p><img src="https://m1kasaz-typora.oss-cn-beijing.aliyuncs.com/images/image-20250620181823482.png" alt="image-20250620181823482"></p></li><li><p>返回vercel，正常情况下你的域名就绑定成功了</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初帖</title>
      <link href="/2025/06/18/2025.6.18/"/>
      <url>/2025/06/18/2025.6.18/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>写下这贴时博主已经被2级域名创建折磨得痛不欲生啊啊啊<br>家人们在阿里云添加二级域名的前缀首字母一定不要大写 😭 😭 (2025.6.18 23:44)</p><h1>建站初衷</h1><p>博主一字蔡，希望在这里分享一些自己学到的技术，遇到的问题吧，给自己一些动力。<br>也欢迎大家在评论区友好交流，一起进步。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
